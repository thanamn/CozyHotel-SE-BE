openapi: 3.0.0
info:
  title: Hotel Booking API
  version: 1.0.0
  description: API for managing hotels, bookings, and user accounts

servers:
  - url: /api/v1
    description: API v1

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        tel:
          type: string
        role:
          type: string
          enum: [user, admin, manager]

    Hotel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        address:
          type: string
        district:
          type: string
        province:
          type: string
        postalcode:
          type: string
        tel:
          type: string
        picture:
          type: string
        description:
          type: string

    RoomType:
      type: object
      properties:
        id:
          type: string
        hotelId:
          type: string
        name:
          type: string
        description:
          type: string
        capacity:
          type: number
        bedType:
          type: string
        size:
          type: string
        amenities:
          type: array
          items:
            type: string
        facilities:
          type: array
          items:
            type: string
        images:
          type: array
          items:
            type: string
        basePrice:
          type: number
        currency:
          type: string
        totalRooms:
          type: number
        nonAvailableRooms:
          type: number
        isAvailable:
          type: boolean

    Booking:
      type: object
      properties:
        id:
          type: string
        checkinDate:
          type: string
          format: date
        checkoutDate:
          type: string
          format: date
        user:
          type: string
        hotel:
          type: string
        roomType:
          type: string

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                tel:
                  type: string
                password:
                  type: string
                role:
                  type: string
                managedHotels:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: User registered successfully

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string

  /auth/me:
    get:
      tags:
        - Authentication
      summary: Get current user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /auth/logout:
    get:
      tags:
        - Authentication
      summary: Logout user
      responses:
        '200':
          description: Logout successful

  /accounts:
    get:
      tags:
        - Accounts
      summary: Get all users (admin only)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /accounts/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Accounts
      summary: Get user by ID (admin only)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - Accounts
      summary: Update user (admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
    delete:
      tags:
        - Accounts
      summary: Delete user (admin only)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User deleted successfully

  /hotels:
    get:
      tags:
        - Hotels
      summary: Get all hotels
      responses:
        '200':
          description: List of hotels
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hotel'
    post:
      tags:
        - Hotels
      summary: Create new hotel (admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hotel'
      responses:
        '201':
          description: Hotel created successfully

  /hotels/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Hotels
      summary: Get hotel by ID
      responses:
        '200':
          description: Hotel details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel'
    put:
      tags:
        - Hotels
      summary: Update hotel (admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hotel'
      responses:
        '200':
          description: Hotel updated successfully
    delete:
      tags:
        - Hotels
      summary: Delete hotel (admin only)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Hotel deleted successfully

  /hotels/{hotelId}/bookings:
    parameters:
      - name: hotelId
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Bookings
      summary: Get bookings for a specific hotel
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of bookings for the hotel
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'
    post:
      tags:
        - Bookings
      summary: Create a booking for a specific hotel
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
      responses:
        '201':
          description: Booking created successfully

  /bookings:
    get:
      tags:
        - Bookings
      summary: Get all bookings (admin or user-specific)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of bookings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'

  /bookings/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Bookings
      summary: Get booking by ID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Booking details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
    put:
      tags:
        - Bookings
      summary: Update booking by ID
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
      responses:
        '200':
          description: Booking updated successfully
    delete:
      tags:
        - Bookings
      summary: Delete booking by ID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Booking deleted successfully

  /roomtypes:
    get:
      tags:
        - Room Types
      summary: Get all room types
      responses:
        '200':
          description: List of room types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoomType'
    post:
      tags:
        - Room Types
      summary: Create new room type (admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomType'
      responses:
        '201':
          description: Room type created successfully

  /roomtypes/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Room Types
      summary: Get room type by ID
      responses:
        '200':
          description: Room type details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomType'
    put:
      tags:
        - Room Types
      summary: Update room type (admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomType'
      responses:
        '200':
          description: Room type updated successfully
    delete:
      tags:
        - Room Types
      summary: Delete room type (admin only)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Room type deleted successfully

  /roomtypes/hotel/{hotelId}:
    parameters:
      - name: hotelId
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Room Types
      summary: Get room types by hotel ID
      responses:
        '200':
          description: List of room types for a hotel
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoomType'

  /manager/hotels:
    get:
      tags:
        - Manager
      summary: Get all hotels managed by the current manager
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of managed hotels
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hotel'

  /manager/hotels/{hotelId}:
    parameters:
      - name: hotelId
        in: path
        required: true
        schema:
          type: string
    
    put:
      tags:
        - Manager
      summary: Update hotel details managed by the current manager
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hotel'
      responses:
        '200':
          description: Hotel updated successfully

  /manager/hotels/{hotelId}/bookings:
    parameters:
      - name: hotelId
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Manager
      summary: Get all bookings for a specific hotel managed by the current manager
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of bookings for the hotel
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'

  /manager/bookings/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
        - Manager
      summary: Update a booking managed by the current manager
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
      responses:
        '200':
          description: Booking updated successfully
    delete:
      tags:
        - Manager
      summary: Delete a booking managed by the current manager
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Booking deleted successfully

  /manager/hotels/{hotelId}/roomtypes:
    parameters:
      - name: hotelId
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Manager
      summary: Get all room types for a specific hotel managed by the current manager
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of room types for the hotel
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoomType'
    post:
      tags:
        - Manager
      summary: Create a new room type for a specific hotel managed by the current manager
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomType'
      responses:
        '201':
          description: Room type created successfully

  /manager/roomtypes/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
        - Manager
      summary: Update a room type managed by the current manager
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomType'
      responses:
        '200':
          description: Room type updated successfully
    delete:
      tags:
        - Manager
      summary: Delete a room type managed by the current manager
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Room type deleted successfully

  /availability/room-types:
    get:
      tags:
        - Availability
      summary: Get available room types for a specific hotel and date range
      parameters:
        - name: hotelId
          in: query
          required: true
          schema:
            type: string
        - name: checkInDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: checkOutDate
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: List of available room types
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      hotelId:
                        type: string
                      checkInDate:
                        type: string
                        format: date
                      checkOutDate:
                        type: string
                        format: date
                      availableRoomTypes:
                        type: array
                        items:
                          $ref: '#/components/schemas/RoomAvailability'

  /availability/hotels:
    get:
      tags:
        - Availability
      summary: Get all hotels with available rooms for a specific date range
      parameters:
        - name: checkInDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: checkOutDate
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: List of hotels with available rooms
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      checkInDate:
                        type: string
                        format: date
                      checkOutDate:
                        type: string
                        format: date
                      availableHotels:
                        type: array
                        items:
                          $ref: '#/components/schemas/HotelAvailability'